name: Redeploy

on:
    workflow_run:
        workflows: ["Docker Image Push"]
        types: [completed]
        branches:
            -   'develop'

jobs:
    on-success:
        runs-on: ubuntu-20.04
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    submodules: 'true'

            -   name: Assign Content To Env Variable
                run: |
                    echo 'DOCKER_STACK_YML<<EOF' >> $GITHUB_ENV
                    cat docker-stack.template.yml >> $GITHUB_ENV
                    echo 'EOF' >> $GITHUB_ENV

            -   name: executing remote ssh commands ssh key
                uses: appleboy/ssh-action@master
                env:
                    APP_NAME: "Parket Lux"
                    APP_KEY: ${{ secrets.APP_KEY }}
                    APP_URL: "http://${{ secrets.HOST_IP }}"
                    MYSQL_USER: ${{ secrets.MYSQL_USER }}
                    MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
                    MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
                    DOCKER_STACK_YML: ${{ env.DOCKER_STACK_YML }}
                    IMAGE_APP: ${{ secrets.DOCKER_HUB_USERNAME }}/mpl
                    #IMAGE_APP_TAG: ${{ github.sha }}
                    IMAGE_APP_TAG: latest
                    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
                    AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
                    AWS_BUCKET_PRIVATE: ${{ secrets.AWS_BUCKET_PRIVATE }}
                    AWS_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
                    AWS_URL: ${{ secrets.AWS_URL }}
                    GEO_API_KEY: ${{ secrets.GEO_API_KEY }}
                    GEO_API_URL: ${{ secrets.GEO_API_URL }}
                    MAIL_MAILER: "smtp"
                    MAIL_HOST: "smtp.mail.ru"
                    MAIL_PORT: "465"
                    MAIL_FROM_NAME: "Parket Lux"
                    MAIL_USERNAME: "testing-mpl@mail.ru"
                    MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
                with:
                    host: ${{ secrets.HOST_IP }}
                    username: ${{ secrets.HOST_USERNAME }}
                    key: ${{ secrets.HOST_KEY }}
                    port: ${{ secrets.HOST_PORT }}
                    envs: APP_NAME,APP_KEY,APP_URL,MYSQL_USER,MYSQL_PASSWORD,MYSQL_ROOT_PASSWORD,DOCKER_STACK_YML,IMAGE_APP,IMAGE_APP_TAG,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_BUCKET,AWS_BUCKET_PRIVATE,AWS_ENDPOINT,AWS_URL,GEO_API_KEY,GEO_API_URL,MAIL_MAILER,MAIL_HOST,MAIL_PORT,MAIL_FROM_NAME,MAIL_USERNAME,MAIL_PASSWORD
                    script: |
                        echo "$DOCKER_STACK_YML" > docker-stack.template.yml
                        rm -f .env
                        echo APP_NAME="$APP_NAME" >> .env
                        echo APP_KEY="$APP_KEY" >> .env
                        echo APP_URL="$APP_URL" >> .env
                        echo MYSQL_USER="$MYSQL_USER" >> .env
                        echo MYSQL_PASSWORD="$MYSQL_PASSWORD" >> .env
                        echo MYSQL_ROOT_PASSWORD="$MYSQL_ROOT_PASSWORD" >> .env
                        echo IMAGE_APP="$IMAGE_APP" >> .env
                        echo IMAGE_APP_TAG="$IMAGE_APP_TAG" >> .env
                        echo AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" >> .env
                        echo AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" >> .env
                        echo AWS_DEFAULT_REGION="$AWS_DEFAULT_REGION" >> .env
                        echo AWS_BUCKET="$AWS_BUCKET" >> .env
                        echo AWS_BUCKET_PRIVATE="$AWS_BUCKET_PRIVATE" >> .env
                        echo AWS_ENDPOINT="$AWS_ENDPOINT" >> .env
                        echo AWS_URL="$AWS_URL" >> .env
                        echo GEO_API_KEY="$GEO_API_KEY" >> .env
                        echo GEO_API_URL="$GEO_API_URL" >> .env
                        echo MAIL_MAILER="$MAIL_MAILER" >> .env
                        echo MAIL_HOST="$MAIL_HOST" >> .env
                        echo MAIL_PORT="$MAIL_PORT" >> .env
                        echo MAIL_FROM_NAME="$MAIL_FROM_NAME" >> .env
                        echo MAIL_USERNAME="$MAIL_USERNAME" >> .env
                        echo MAIL_PASSWORD="$MAIL_PASSWORD" >> .env

                        docker-compose --file docker-stack.template.yml config > current-docker-stack.yml
                        docker-compose --file docker-stack.template.yml config | docker stack deploy mpl -c -
    on-failure:
        runs-on: ubuntu-20.04
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        steps:
            -   run: echo 'The triggering workflow failed'
